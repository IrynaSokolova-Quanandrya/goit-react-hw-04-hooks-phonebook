{"version":3,"sources":["components/Input.js","components/ContactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["Input","handleChange","e","console","log","target","value","name","props","onChange","this","labelName","id","type","pattern","title","className","htmlFor","required","Component","ContactForm","inputId","nanoid","state","number","setState","handleSubmit","preventDefault","onSubmit","reset","ContactList","contacts","onDeleteContact","map","onClick","Filter","Phonebook","filter","addSubmitData","friendName","some","alert","contact","changeFilter","getFilterSearch","normalizedFilter","toLowerCase","includes","deleteContact","nameId","prev","prevProps","prevState","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","filterSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56431755.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/input.css\";\n\nexport default class Input extends Component {\n  handleChange = (e) => {\n    console.log(e.target.value);\n    console.log(e.target.name);\n    const { name, value } = e.target;\n    this.props.onChange({ value, name });\n  };\n  render() {\n    const { labelName, value, id, type, name, pattern, title } = this.props;\n    return (\n      <label className=\"label\" htmlFor={id}>\n        {labelName}\n        <input\n          className=\"input\"\n          value={value}\n          onChange={this.handleChange}\n          id={id}\n          type={type}\n          name={name}\n          pattern={pattern}\n          title={title}\n          required\n        />\n      </label>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/form.css\";\nimport \"../styles/button.css\";\nimport Input from \"../components/Input\";\nimport { nanoid } from \"nanoid\";\n\nexport default class ContactForm extends Component {\n  inputId = nanoid();\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = ({ name, value }) => {\n    this.setState({ [name]: value });\n    console.log(this.state);\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <Input\n          labelName=\"Name\"\n          value={name}\n          onChange={this.handleChange}\n          type=\"text\"\n          id={this.inputId}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <Input\n          labelName=\"Number\"\n          value={number}\n          onChange={this.handleChange}\n          type=\"tel\"\n          id={this.inputId}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button type=\"submit\" className=\"btn\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/button.css\";\nimport \"../styles/contactList.css\";\nexport default class ContactList extends Component {\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    return (\n      <ul className=\"contact__list\">\n        {contacts.map(({ id, name, number }) => (\n          <li className=\"contact__item\" key={id}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/input.css\";\nimport \"../styles/button.css\";\n\nexport default class Filter extends Component {\n  render() {\n    return (\n      <label className=\"label filter__label\">\n        Find contacts by name\n        <input\n          className=\"input\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount(prevProps, prevState) {\n    const contacts = localStorage.getItem('contacts')\n    const parseContacts = JSON.parse(contacts)\n\n    this.setState({contacts: parseContacts})\n    console.log(parseContacts);\n    console.log(contacts);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n    console.log('componentDidUpdate:', this.state);\n    console.log('componentDidUpdate:', prevState);\n  }\n\n  addSubmitData = ({ name, number }) => {\n    const friendName = name;\n    if (this.state.contacts.some(({ name }) => name === friendName)) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => {\n      return { contacts: [...contacts, contact] };\n    });\n  };\n  changeFilter = (e) => {\n    console.log(e);\n    this.setState({ filter: e.target.value });\n  };\n  getFilterSearch = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  deleteContact = (nameId) => {\n    console.log(nameId);\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== nameId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filterSearch = this.getFilterSearch();\n    return (\n      <div>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.addSubmitData} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filterSearch}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}